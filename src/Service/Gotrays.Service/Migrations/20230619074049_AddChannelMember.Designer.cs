// <auto-generated />
using System;
using Gotrays.Service.Infrastructure.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gotrays.Service.Migrations
{
    [DbContext(typeof(GotraysDbContext))]
    [Migration("20230619074049_AddChannelMember")]
    partial class AddChannelMember
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("Gotrays.Service.Domain.Chat.Aggregates.Channel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("Channels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c388fdae-f6ac-4d35-a209-17851d36a678"),
                            Avatar = "https://blog-simple.oss-cn-shenzhen.aliyuncs.com/Avatar.jpg",
                            CreationTime = new DateTime(2023, 6, 19, 7, 40, 49, 353, DateTimeKind.Utc).AddTicks(6137),
                            Description = "默认频道",
                            IsDeleted = false,
                            ModificationTime = new DateTime(2023, 6, 19, 7, 40, 49, 353, DateTimeKind.Utc).AddTicks(6137),
                            Name = "默认频道",
                            UserId = new Guid("af3cc4a1-ac60-497a-bfa5-3c1324287b6f")
                        });
                });

            modelBuilder.Entity("Gotrays.Service.Domain.Chat.Aggregates.ChannelMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ChannelId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("ChannelId", "UserId")
                        .IsUnique();

                    b.ToTable("ChannelMembers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6e0833a-fb04-4665-8564-44a2bc38063c"),
                            ChannelId = new Guid("c388fdae-f6ac-4d35-a209-17851d36a678"),
                            UserId = new Guid("af3cc4a1-ac60-497a-bfa5-3c1324287b6f")
                        });
                });

            modelBuilder.Entity("Gotrays.Service.Domain.Users.Aggregates.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDisable")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastLoginTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Account")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af3cc4a1-ac60-497a-bfa5-3c1324287b6f"),
                            Account = "admin",
                            Avatar = "https://blog-simple.oss-cn-shenzhen.aliyuncs.com/Avatar.jpg",
                            CreationTime = new DateTime(2023, 6, 19, 7, 40, 49, 353, DateTimeKind.Utc).AddTicks(5390),
                            IsDeleted = false,
                            IsDisable = false,
                            LastLoginTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModificationTime = new DateTime(2023, 6, 19, 7, 40, 49, 353, DateTimeKind.Utc).AddTicks(5392),
                            Password = "4cab4efac8506b09a9a6460b5c5b4eef",
                            Role = "Admin",
                            Salt = "3b5311c5f55b4386aab0c3cc709d8656",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Gotrays.Service.Domain.Chat.Aggregates.Channel", b =>
                {
                    b.HasOne("Gotrays.Service.Domain.Users.Aggregates.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gotrays.Service.Domain.Chat.Aggregates.ChannelMember", b =>
                {
                    b.HasOne("Gotrays.Service.Domain.Chat.Aggregates.Channel", "Channel")
                        .WithMany()
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gotrays.Service.Domain.Users.Aggregates.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
