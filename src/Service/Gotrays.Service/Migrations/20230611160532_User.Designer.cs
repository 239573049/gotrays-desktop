// <auto-generated />
using System;
using Gotrays.Service.Infrastructure.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gotrays.Service.Migrations
{
    [DbContext(typeof(GotraysDbContext))]
    [Migration("20230611160532_User")]
    partial class User
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("Gotrays.Service.Domain.Chat.Aggregates.Channel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("Channels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0884205-ba1b-4244-ab5f-411b6ab44a1e"),
                            Avatar = "https://blog-simple.oss-cn-shenzhen.aliyuncs.com/Avatar.jpg",
                            CreationTime = new DateTime(2023, 6, 11, 16, 5, 32, 615, DateTimeKind.Utc).AddTicks(2589),
                            Description = "默认频道",
                            IsDeleted = false,
                            ModificationTime = new DateTime(2023, 6, 11, 16, 5, 32, 615, DateTimeKind.Utc).AddTicks(2590),
                            Name = "默认频道",
                            UserId = new Guid("f377502a-a209-4eb0-9769-4a3811540352")
                        });
                });

            modelBuilder.Entity("Gotrays.Service.Domain.Users.Aggregates.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDisable")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastLoginTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Account")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f377502a-a209-4eb0-9769-4a3811540352"),
                            Account = "admin",
                            Avatar = "https://blog-simple.oss-cn-shenzhen.aliyuncs.com/Avatar.jpg",
                            CreationTime = new DateTime(2023, 6, 11, 16, 5, 32, 615, DateTimeKind.Utc).AddTicks(1580),
                            IsDeleted = false,
                            IsDisable = false,
                            LastLoginTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModificationTime = new DateTime(2023, 6, 11, 16, 5, 32, 615, DateTimeKind.Utc).AddTicks(1582),
                            Password = "7c1f45eedd1b563b14506ea5d23b461a",
                            Role = "Admin",
                            Salt = "f9d60b71ace84792b710f23af19c0e98",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Gotrays.Service.Domain.Chat.Aggregates.Channel", b =>
                {
                    b.HasOne("Gotrays.Service.Domain.Users.Aggregates.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
